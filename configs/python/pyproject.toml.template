[project]
name = "{{PROJECT_NAME}}"
version = "0.1.0"
description = "{{PROJECT_DESCRIPTION}}"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "dynaconf>=3.2",
    "pydantic>=2.0",
    "rich>=13.0",
    "typer>=0.9",
    "python-dotenv>=1.0",
    "pyyaml>=6.0",
    "toml>=0.10",
    "loguru>=0.7.3",
    "glom>=24.11.0",
    "humanize>=4.0.0",
    "pydantic-extra-types>=2.10.5",
]

[project.optional-dependencies]
dev = [
    "icecream>=2.1",
    "mypy>=1.8",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pyright>=1.1",
    "ruff>=0.2",
    "factory-boy>=3.3.3",
    "faker>=30.0",
]

[project.scripts]
{{PROJECT_NAME}} = "{{PACKAGE_DIRS}}.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["{{PACKAGE_DIRS}}"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
pythonpath = ["."]
testpaths = ["tests"]
addopts = "-ra -q --strict-markers --cov={{PACKAGE_DIRS}} --cov-report=term-missing"
markers = [
    "integration: marks tests as integration tests (requires external services)",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["{{PACKAGE_DIRS}}"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/legacy/*",
    "*/examples/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "coverage_html_report"

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]